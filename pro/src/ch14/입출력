*InputStream(바이트기반 입력스트림의 최고 조상.abstract class) - 교재p874
	-close() :	InputStream에서 사용했던 시스템 자원을 풀어준다. 자원반납
	-read() : 1바이트만 읽는다. 
	 1바이트만 읽기 때문에  1byte의 아스키 코드로 표현되는 숫자,알파벳, 특수문자는 잘 읽을 수 있다.
	 하지만     한글과 같이   2byte를 필요로 하는 유니코드는
	 read()로 읽을 수 없다
	 키보드로 입력된  한글을 얻기 위해서는
	 	우선, read(byte[] b) 또는 read(byte[] b, inf off, int len)을 이용해서
	 			 전체  입력된 내용을   바이트배열로 받는다.
	 			 이 배열을 이용해서   String객체를 생성한다.
	 			
	 			키보드를 이용해서 qwert라고 입력하고  enter키를 누르면
	 			바이트배열에 저장될 때는 내가 입력한 qwert에 해당하는 바이트와  캐리지리턴,라인피드까지 포함된다
	 			
	참고 캐리지리턴(Carriage Return:CR)?	 13. 현재 위치에서 바로 아래로 이동
			라인피드란(Line Feed:LF)? 10			   커서의 위치를 앞으로 이동
	
	
*InputStream(바이트기반 출력스트림의 최고 조상.abstract class) - 교재p874
	-close() :	OuputStream에서 사용했던 시스템 자원을 풀어준다. 자원반납
	
	
*FileInputStream과 FileOutputStream - 교재p882
	-파일(file)에 데이터를 입출력하는 바이트기반 스트림
	-flush() : 출력 스트림은 내부에 작은 버퍼가 있어서
						  데이터가 출력되기 전에  버퍼에 쌓여있다가
						 순서대로 출력된다.
						 flush()는  버퍼에 잔류하고 있는 데이터를 모두 출력시키고
						 					버퍼를 비우는 역할을 한다
						 					프로그램에서 더 이상 출력할 데이터가 없다면
						 					flush()메서드를 마지막으로 호출하여
						 					버퍼에 잔류하는 모든 데이터가 출력되도록 해야 한다. 
	-close() :	OuputStream에서 사용했던 시스템 자원을 풀어준다. 자원반납
	
	
*보조 스트림
	- 다른 스트림과 연결되어   여러 가지 편리한 기능을 제공해주는 스트림을 말한다.
	- 보조 스트림은  독립적으로  수행될 수 없기 때문에
		입력 소스와 바로 연결되는 InputStream, FileInputStream,  Reader, FileReader
		출력 소스와 바로 연결되는 OutputStream, FileOutputStream, Writer, FileWriter 등에 연결해서
		입출력을 수행한다
	=> 문자변환, 입출력 성능향상 등의 기능을 제공
	->입력스트림 --> 프로그램 --> 출력스트림	
	->입력스트림 -> 보조스트림 -> 프로그램 -> 보조스트림-> 출력스트림	
	->입력스트림 -> 보조스트림1 -> 보조스트림2 -> 프로그램 -> 보조스트림2-> 보조스트림1-> 출력스트림	
		
		보조스트림  변수 = new 보조스트림(메인스트림);
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
			
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	